/* Copyright (c) Oracle Corporation 1992.  All Rights Reserved */
/*****************************************************************************
  NAME
    rsf71.dei - WinNT V3 de-installation script for ORACLE Required Support Files.

  DESCRIPTION
    This script removes the Windows NT ORACLE RSF files and un-registers the
    product.

  OWNER
    Tony Rodgers

  MODIFIED    DD-MMM-YY Reason
    vraja     10/16/96  Take care of ORASPAWN.DLL.                         
    vraja     08/26/96  7.1.3.3.23 (installable patch)
    syau      07/01/94  7.1.3
    HA!       04/29/94  7.1.2 and 3.0.10.2
    trodgers  01-APR-92 Created.
*****************************************************************************/
{
  
  { doit = execute("%installer_home%\%operating_system%.dei"); }
  [
    'UNBOUND_VARIABLE: signal('failure,instantiate(nls("instver_too_early2","The version of the Installer currently running is %%installer_version%%. The product(s) you have chosen to deinstall were installed with a later version of the Installer. Please use a later version of the Installer to deinstall these product(s).")));
  ]

  if (doit)
    {
      /**********************************************************************
         Ensure that the necessary environment variables are bound
       **********************************************************************/
      {
        rdbms71 = v7_translate("rdbms71");
        {
          if (not(exists(rdbms71)))
            signal('UNBOUND_ENVIRONMENT_VARIABLE);
        }
        [ 'OS_ERROR: signal('UNBOUND_ENVIRONMENT_VARIABLE);
          'INVALID_FILE_NAME: signal('UNBOUND_ENVIRONMENT_VARIABLE);
          'PERMISSION_DENIED: signal('UNBOUND_ENVIRONMENT_VARIABLE); 
        ]
      }
      [
          'UNBOUND_ENVIRONMENT_VARIABLE:
          {
            variable = "rdbms71";
            information_dialog(instantiate(deinstall_prompt02),
                               instantiate(deinstall_content02),
                               instantiate(deinstall_help02));
            doit = FALSE;
          }
      ]

      {
        plsql21 = v7_translate("plsql21");
        {
          if (not(exists(plsql21)))
            signal('UNBOUND_ENVIRONMENT_VARIABLE);
        }
        [ 'OS_ERROR: signal('UNBOUND_ENVIRONMENT_VARIABLE);
          'INVALID_FILE_NAME: signal('UNBOUND_ENVIRONMENT_VARIABLE);
          'PERMISSION_DENIED: signal('UNBOUND_ENVIRONMENT_VARIABLE); 
        ]
      }
      [
          'UNBOUND_ENVIRONMENT_VARIABLE:
          {
            variable = "plsql21";
            information_dialog(instantiate(deinstall_prompt02),
                               instantiate(deinstall_content02),
                               instantiate(deinstall_help02));
            doit = FALSE;
          }
      ]
    }

  if (doit)
  {
      /**********************************************************************
         Bind all NLS deinstall strings here...
       **********************************************************************/

      unregistering = nls("unregistering","Unregistering %%registry_label%%...");
      deinst_sql = nls("deinst_sql","Deinstalling %%registry_label%% SQL Scripts...");
      deinst_msb = nls("deinst_msb","Deinstalling %%registry_label%% Message Files...");
      deinst_dll = nls("deinst_dll","Deinstalling %%registry_label%% Dynamic Link Libraries...");
      deinst_sym = nls("deinst_sym","Deinstalling %%registry_label%% Symbol files...");
      deinst_oraspwn = nls("deinst_oraspwn","Deinstalling %%registry_label%% ORASPAWN.DLL...");
      deinst_script = nls("deinst_script","Deinstalling %%registry_label%% Installation Scripts...");

      service_prompt = nls("service_prompt","You must stop all oracle services in order to deinstall the rsf.");
      service_content = nls("service_content","Stop Oracle Services");
      service_help = nls("service_help","You should use the oradim71 utility or go into the services control panel application and stop all services starting with Oracle.");

      /**********************************************************************
         Continue with the deinstallation
       **********************************************************************/
     
      ui_product(registry_label);

      if ( platform() == "nt")
      {
       /* check to see if all of the oracle services are shutdown */      
       if(exists("%ORACLE_HOME%\bin\ora71dis.dll"))
       {
        copy_file("%ORACLE_HOME%\bin\ora71dis.dll", "%ORACLE_HOME%\bin\ora71dis.tmp");
        {
	   remove_file("%ORACLE_HOME%\bin\ora71dis.dll");
           copy_file("%ORACLE_HOME%\bin\ora71dis.tmp", "%ORACLE_HOME%\bin\ora71dis.dll");
        }
	 [
	  'PERMISSION_DENIED,'INVALID_FILE_NAME,'OS_ERROR,'WRITE_ERROR:
           {
	    /* stop all services for the default instance ORCL */
            spawn("net stop oraclenmplistenerorcl", "%RDBMS71%\nmp.out", "%RDBMS71%\nmp.err");
            spawn("net stop oracleserviceorcl", "%RDBMS71%\srv.out", "%RDBMS71%\srv.err");
            spawn("net stop oracletcplistener", "%RDBMS71%\tcp.out", "%RDBMS71%\tcp.err");
            remove_file("%ORACLE_HOME%\bin\ora71dis.tmp");
           }
	  'DEFAULT: remove_file("%ORACLE_HOME%\bin\ora71dis.tmp");
	 ]
       }
      }	    
    
      ui_action(instantiate(deinst_sql));
      remove(sql);

      ui_action(instantiate(deinst_msb));
      remove(msg);

      /* hopefully everything must be down since we already checked the services */     
      ui_action(instantiate(deinst_dll));
      remove(dll);

      if ( platform() == "nt" )
      {
        /* .SYMs for the various DLLs must go. If someone needs RDBMS 7.1.3 without*/
        /* RSF 7.1.3 then he/she is in trouble to start with!!                     */
        ui_action(instantiate(deinst_sym));
        remove(sym);
        
        /* remove ORASPAWN.DLL iff no RDBMS version higher than 7.1.3.x is present */
        /* and iff RSF7.0 is not present.                                          */
        if (not(registered("ntrsf70"))   && not(registered("ntrdbms72")) && 
            not(registered("ntrdbms73")) && not(registered("ntrdbms80")))
        {
          ui_action(instantiate(deinst_oraspwn));
          remove(oraspwn);
        }
      }

      ui_action(instantiate(deinst_script));
      remove(deinstl);

      ui_action(instantiate(unregistering));
      unregister(current_registry);

      if (not(registered("ntrdbms71")) && not(registered("ntutil71")))
      {
        modify("RDBMS71","",ora_config,"=");
        modify("PLSQL21","",ora_config,"=");
      }

    }
}
