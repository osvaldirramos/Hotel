/* Copyright (c) Oracle Corporation 1995.  All Rights Reserved */
/*****************************************************************************
  NAME
    rsf72.ins - WinNT V3 installation script for ORACLE Required Support Files.

  DESCRIPTION
    This script installs the RSF files.

  OWNER
    Tony Rodgers

  MODIFIED    DD-MMM-YY Reason
    nevans    10/16/96  used overwrite_mode to correct concurrent RSF 7.2 and 7.3 install error (MFC40.DLL)
    ljiang    07/20/95  7.2
    syau      07/01/94  7.1.3
    HA!       04/28/94  7.1.2 and 3.0.10.2
    trodgers  10-APR-92 Created.
*****************************************************************************/
{
  /**************************************************************************
      Start main logic...
   **************************************************************************/
  if (doit)
    {
      ins_ratchet = "7.2.2.4.3";

      execute("%installer_home%\nt.ins");

      ui_product(product_label);

      permit_retry_operations = FALSE;

      /* This variable is set to force the installer to do version checking before copying files */
      overwrite_mode = 'UPDATE;

      ui_action( instantiate(installing_sys) );
      while(not(empty(copy_list)))
      {
        copy_error = FALSE;

        file_to_copy = first(copy_list);
        {
          copy(sys, file_to_copy);
        }
        [
          'DEFAULT: copy_error = TRUE;
        ]

        if (copy_error)
        {
          dest_file = first(group_files(sys, file_to_copy));

          {
            if (exists(dest_file))
            {
              froot = first(explode(file_name(dest_file), "."));
              move_name = pathify(implode(list(directory_name(dest_file), "\", froot, ".OLD")));

              move_file(dest_file, move_name);
              copy(sys, file_to_copy);
            }
          }
          [
            'DEFAULT: continue();
          ]
        }

        copy_list = rest(copy_list);
      }

      /* We return the installer to its default mode so as to avoid later errors. */
      overwrite_mode = 'ALWAYS;

      /* get rid of the old files in %oracle_home%\bin */
      bin_files = group_files(commdll);
      moved_files = group_files(movedll);
      while (not(empty(bin_files)))
      {
        current_bin_file = first(bin_files);
        current_moved_file = first(moved_files);

        {
          if (exists(current_bin_file))
          {
            {
              remove_file(current_bin_file);
            }
            [
              'DEFAULT: continue();
            ]

            /* if the remove_file failed, just move the file out of the way */
            if (exists(current_bin_file))
              move_file(current_bin_file, current_moved_file);
          }
        }
        [
          'DEFAULT: continue();
        ]

        bin_files = rest(bin_files);
        moved_files = rest(moved_files);
      }

      permit_retry_operations = TRUE;

      ui_action(instantiate(installing_scripts));
      copy(deinstl);
      if (registered("ntrsf70"))
        copy(deinstl70);
      if (registered("ntrsf71"))
        copy(deinstl71);

      ui_action(instantiate(installing_dlls));
      copy(dll);

      ui_action(instantiate(installing_msbs));
      copy(msg, nls_abbreviation);

      ui_action(instantiate(installing_sql));
      copy(sql);

      ui_action(instantiate(installing_nlsdata));
      copy(nlsdata);

      /* copy release notes */
      permit_retry_operations = false;

      { copy(user, user_release_grp) ;}
      [ 'DEFAULT : continue() ; ]
      permit_retry_operations = true;

      if (doSmartStart)
        {
          ss_decrypt_file(product_key,
                          "%s_location%NT_X86/V7/RSF/CORENT23.DLL",
                          "%oracle_home%\bin\CORENT23.DLL");
          ss_decrypt_file(product_key,
                          "%s_location%NT_X86/V7/RSF/ORASPAWN.DLL",
                          "%oracle_home%\bin\ORASPAWN.DLL");
        }


      if (set_rdbms72)
        {
          ui_action(instantiate(modifying_config));
          modify("RDBMS72",RDBMS72,ora_config,product_filename(current_product));
        }

      if (set_plsql22)
        {
          ui_action(instantiate(modifying_config));
          modify("PLSQL22",PLSQL22,ora_config,product_filename(current_product));
        }

      if (set_pro17)
        {
          ui_action(instantiate(modifying_config));
          modify("PRO17",PRO17,ora_config,product_filename(current_product));
        }

      if (set_nlsrtl31)
        {
          ui_action(instantiate(modifying_config));
          modify("NLSRTL31",NLSRTL31,ora_config,product_filename(current_product));
        }

      if (set_ora_nls)
        {
          ui_action(instantiate(modifying_config));
          modify("ORA_NLS",ORA_NLS,ora_config,product_filename(current_product));
        }

      ui_action(instantiate(registering));
      register(current_product);
      if (member(selected_products,current_product))
        reference(current_product);

      permit_retry_operations = FALSE;
    }
}
