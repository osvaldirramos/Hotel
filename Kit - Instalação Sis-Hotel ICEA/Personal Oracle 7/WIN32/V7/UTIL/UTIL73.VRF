/* Copyright (c) Oracle Corporation 1995.  All Rights Reserved */
/*****************************************************************************
  NAME
    util73.vrf - Windows NT V3 installation verification script for database
                 utilities.

  DESCRIPTION
    This script checks dependencies and environment settings for installation
    of the ORACLE database utilities.

  OWNER
    Tony Rodgers

  MODIFIED    DD-MMM-YY Reason
  ctow        07/08/96 - Add stub support for Windows 95
  mmacdona    03/28/96 - 7.3.2.2.0
  mmacdona    03/13/96 - Make Win32 Common 
  dcolello    01/16/96 - 7.3
  ljiang      07/20/95 - 7.2
  syau        07/01/94 - 7.1.3
  Hartenstine 04/20/93 - WIN_NT: Adapt for Windows NT
    kschrait  02/19/93 - Added dialog to ask whether 16 bit or 32 bit executables are needed
    trodgers  01-APR-92 Created.
*****************************************************************************/
{
  if (operating_system == "win95")
  {
	prod_prefix = "w95";
  }
  else
  {
	prod_prefix = "nt";
  }

  { doit = execute("%installer_home%\%operating_system%.vrf"); }
  [
    'UNBOUND_VARIABLE:
      {
        required_version = product_version(evaluate("%prod_prefix%instver"));
        temp = explode(required_version, ".");
        required_version = implode(list(first(temp),first(rest(temp)),
                                        first(rest(rest(temp))),
                                        first(rest(rest(rest(temp))))),".");
        signal('failure, instantiate(nls("instver_too_early1", "The version
        of the Installer currently running is %%installer_version%%. The installation you have chosen requires version %%required_version%% or later.  Please run version %%required_version%% or later in order to perform this installation.")));
      }
  ]

  if (doit)
    {
      /***********************************************************************
          Set the VRF-INS script "ratchet"
       ***********************************************************************/
      vrf_ratchet = "7.3.2.2.0";

      /***********************************************************************
         Bind path variables...
      ************************************************************************/
      {
        set_rdbms73 = FALSE;
        rdbms73 = translate("RDBMS73", ora_config, product_filename(current_product));
        if (not(exists(rdbms73)))
          signal('UNBOUND_ENVIRONMENT_VARIABLE);
      }
        [ 'OS_ERROR,'INVALID_FILE_NAME,'FILE_NOT_FOUND,
          'PERMISSION_DENIED,'UNBOUND_ENVIRONMENT_VARIABLE:
          {
            rdbms73 = "%oracle_home%\RDBMS73";
            set_rdbms73 = TRUE;
          }
        ]

      {
        set_plsql23 = FALSE;
        plsql23 = translate("PLSQL23", ora_config, product_filename(current_product));
        if (not(exists(plsql23)))
          signal('UNBOUND_ENVIRONMENT_VARIABLE);
      }
        [ 'OS_ERROR,'INVALID_FILE_NAME,'FILE_NOT_FOUND,
          'PERMISSION_DENIED,'UNBOUND_ENVIRONMENT_VARIABLE:
          {
            plsql23 = "%oracle_home%\PLSQL23";
            set_plsql23 = TRUE;
          }
        ]

      /***********************************************************************
         Bind stub variables (Utilities & Server Manager)
      ************************************************************************/
      if (platform() == "win95")
      {
      	{
        	set_stub = FALSE;
        	util_stub = stringify(translate("UTIL_DFLT", ora_config, product_filename(current_product)), FALSE);
		if (length(util_stub) == 0)
          	signal('UNBOUND_ENVIRONMENT_VARIABLE);
		else set_stub = TRUE;
      	}
        	[ 'OS_ERROR,'INVALID_FILE_NAME,'FILE_NOT_FOUND,
          	'PERMISSION_DENIED,'UNBOUND_ENVIRONMENT_VARIABLE:
          	{
            	util_stub = "73";
            	set_stub = TRUE;
          	}
        	]

        	set_smgr = FALSE;
        	smgr_stub = stringify(translate("SMGR_DFLT", ora_config, product_filename(current_product)), FALSE);
        	if (length(smgr_stub) == 0)
          	signal('UNBOUND_ENVIRONMENT_VARIABLE);
		else set_smgr = TRUE;
      	}
        	[ 'OS_ERROR,'INVALID_FILE_NAME,'FILE_NOT_FOUND,
          	'PERMISSION_DENIED,'UNBOUND_ENVIRONMENT_VARIABLE:
          	{
            	smgr_stub = "23";
            	set_smgr = TRUE;
          	}
        	]
      } /* Windows 95 */

      if (platform() == "nt")
      {
        {
        nt_stop_service("oracletnslistener");
        }
        [
          'DEFAULT: continue();
        ]

        {
          nt_stop_service("oraclenmplistenerorcl");
        }
        [
          'DEFAULT: continue();
        ]

        {
          nt_stop_service("oracletcplistener");
        }
        [
          'DEFAULT: continue();
        ]

        {
          nt_stop_service("oraclestartorcl");
        }
        [
          'DEFAULT: continue();
        ]

        {
          nt_stop_service("oracleserviceorcl");
        }
        [
          'DEFAULT: continue();
        ]

        {
          nt_stop_service("oracleservice");   /* for v7.0 */
        }
        [
          'DEFAULT: continue();
        ]

        {
          nt_stop_service("oraclenmplistener");  /* for v7.0 */
        }
        [
          'DEFAULT: continue();
        ]
      }


      /***********************************************************************
         Bind string variables & prompt strings...
      ***********************************************************************/
      installing_scripts = nls("installing_scripts",
                               "Installing %%product_label%% Scripts...");
      installing_executables = nls("installing_executables",
                               "Installing %%product_label%% Executables...");
      installing_help = nls("installing_help",
                             "Installing %%product_label%% Help Files...");
      installing_msbs = nls("installing_msbs",
                             "Installing %%product_label%% Message Files...");
      installing_sql = nls("installing_sql",
                               "Installing %%product_label%% SQL Scripts...");
      installing_demo = nls("installing_demo",
                               "Installing %%product_label%% Demonstration Files...");
  
      if (operating_system == "win95") 
	  modifying_config = nls("modifying_config", "Modifying Windows 95 Registry...");
      else 
	  modifying_config = nls("modifying_config", "Modifying Windows NT Registry...");

      registering = nls("registering","Registering %%product_label%%...");

      return(verify(w32rsf73) + sum(deinstl,
        exec,help,msg,nls_abbreviation,sql,demo));
    }
  else
    {
      refresh_map_file = FALSE;
      return(0);
    }
}
